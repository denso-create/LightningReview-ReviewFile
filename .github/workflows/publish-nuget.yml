name: Publish-Nuget

# ワークフローが動作する条件を指定する
# 下記設定はmainブランチに対してワークフローのBuildが完了したことをトリガとする
# workflow_dispatchとはGitHub上でワークフローを手動実行できるトリガ。利便性が高いため基本設定するのを推奨
on:
  workflow_dispatch:
  workflow_run:
    workflows: ["Build"]
    branches: [main]
    types:
      - completed

# 仮想環境で行わせる動作を記述する
jobs:
  publish-nuget:

    # 動作環境
    runs-on: ubuntu-latest

    # 環境変数
    env:
      # slnファイルの存在するフォルダの相対パス
      SolutionPath: src

    steps:

    # リポジトリの内容をチェックアウトする
    - name: Checkout
      uses: actions/checkout@v2

    # dotnet CLIを利用するためにdotNet環境を入れる
    # dotnet-versionにはSDKバージョンを指定する
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 8.0.x
    
    # 依存関係を復元する
    - name: Restore dependencies
      run: dotnet restore
      working-directory: ${{env.SolutionPath}}

    # ビルドを実行する
    - name: Build
      run: dotnet build ${{env.SolutionPath}} --no-restore --configuration Release

    # ReviewFileをパッケージ化する
    - name: Package ReviewFile
      run: dotnet pack -c Release -o . src/ReviewFile/ReviewFile.csproj

    # ReviewFileToJsonServiceをパッケージ化する
    - name: Package ReviewFileToJsonService
      run: dotnet pack -c Release -o . src/ReviewFileToJsonService/ReviewFileToJsonService.csproj

    # パッケージ化されたReviewFileおよびReviewFileToJsonServiceを公開する
    - name: Publish to ReviewFileToJsonService
      run: dotnet nuget push *.nupkg -k ${{secrets.NUGET_API_KEY}} -s https://api.nuget.org/v3/index.json
